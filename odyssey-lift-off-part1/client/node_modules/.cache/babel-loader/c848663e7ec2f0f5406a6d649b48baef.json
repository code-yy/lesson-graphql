{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Tutorial/odyssey-lift-off-part1/client/src/pages/tracks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Layout } from \"../components\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport TrackCard from \"../containers/track-card\";\nimport QueryResult from \"../components/query-result\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TRACKS = gql`\n  query getTracks {\n    tracksForHome {\n      id\n      title\n      thumbnail\n      length\n      modulesCount\n      author {\n        name\n        photo\n      }\n    }\n  }\n`;\n\nconst Tracks = () => {\n  _s();\n\n  var _data$tracksForHome;\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(TRACKS);\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    grid: true,\n    children: /*#__PURE__*/_jsxDEV(QueryResult, {\n      error: error,\n      loading: loading,\n      data: data,\n      children: data === null || data === void 0 ? void 0 : (_data$tracksForHome = data.tracksForHome) === null || _data$tracksForHome === void 0 ? void 0 : _data$tracksForHome.map(track => /*#__PURE__*/_jsxDEV(TrackCard, {\n        track: track\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tracks, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Tracks;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"sources":["/Users/user/Desktop/Tutorial/odyssey-lift-off-part1/client/src/pages/tracks.js"],"names":["React","Layout","useQuery","gql","TrackCard","QueryResult","TRACKS","Tracks","loading","error","data","message","tracksForHome","map","track","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,OAAO,MAAMC,MAAM,GAAGH,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdO;;AAgBP,MAAMI,MAAM,GAAG,MAAM;AAAA;;AAAA;;AACnB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BR,QAAQ,CAACI,MAAD,CAAzC;AACA,MAAIE,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AACX,sBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEF,KAApB;AAA2B,MAAA,OAAO,EAAED,OAApC;AAA6C,MAAA,IAAI,EAAEE,IAAnD;AAAA,gBACGA,IADH,aACGA,IADH,8CACGA,IAAI,CAAEE,aADT,wDACG,oBAAqBC,GAArB,CAA0BC,KAAD,iBACxB,QAAC,SAAD;AAA0B,QAAA,KAAK,EAAEA;AAAjC,SAAgBA,KAAK,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAbD;;GAAMR,M;UAC6BL,Q;;;KAD7BK,M;AAeN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { Layout } from \"../components\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport TrackCard from \"../containers/track-card\";\nimport QueryResult from \"../components/query-result\";\n\nexport const TRACKS = gql`\n  query getTracks {\n    tracksForHome {\n      id\n      title\n      thumbnail\n      length\n      modulesCount\n      author {\n        name\n        photo\n      }\n    }\n  }\n`;\n\nconst Tracks = () => {\n  const { loading, error, data } = useQuery(TRACKS);\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n  return (\n    <Layout grid>\n      <QueryResult error={error} loading={loading} data={data}>\n        {data?.tracksForHome?.map((track) => (\n          <TrackCard key={track.id} track={track} />\n        ))}\n      </QueryResult>\n    </Layout>\n  );\n};\n\nexport default Tracks;\n"]},"metadata":{},"sourceType":"module"}